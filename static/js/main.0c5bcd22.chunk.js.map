{"version":3,"sources":["components/WeatherInput.js","components/WeatherInfo.js","App.js","index.js"],"names":["WeatherInput","city","setCity","className","type","placeholder","onChange","e","target","value","WeatherInfo","temp","conditions","windSpeed","humidity","setTemp","setConditions","setWindSpeed","setHumidity","useEffect","CSSTransition","in","timeout","classNames","unmountOnExit","App","apiKey","useState","a","axios","get","responce","Math","round","data","main","toFixed","weather","Number","wind","speed","getWeather","ReactDOM","render","document","getElementById"],"mappings":"6QAwBeA,MArBf,YAAwC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QAM1B,OACC,mCACD,gCACO,uBACHC,UAAU,mBACVC,KAAK,OACCC,YAAY,qBACZC,SAXW,SAACC,GACnBL,EAAQK,EAAEC,OAAOC,QAWVA,MAAOR,S,QCkBLS,MA9Bf,YAAyH,IAAlGT,EAAiG,EAAjGA,KAAMU,EAA2F,EAA3FA,KAAMC,EAAqF,EAArFA,WAAYC,EAAyE,EAAzEA,UAAWC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YAWvG,OATFC,qBAAU,WACG,KAATlB,IACFc,EAAQ,IACRC,EAAc,IACdC,EAAa,IACbC,EAAY,QAKb,mCACC,cAACE,EAAA,EAAD,CACGC,GAAgCR,EAChCS,QAAS,IACTC,WAAW,6BACXC,eAAa,EAJhB,SAMG,sBAAKrB,UAAU,kBAAf,UACG,4BAAIQ,IACJ,4BAAIC,IACJ,4BAAIE,IACJ,4BAAID,YCuBEY,MA3Cf,WAEG,IAAMC,EAAS,mCACf,EAAwBC,mBAAS,IAAjC,mBAAO1B,EAAP,KAAaC,EAAb,KACA,EAAwByB,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaI,EAAb,KACA,EAAoCY,mBAAS,IAA7C,mBAAOf,EAAP,KAAmBI,EAAnB,KACA,EAAkCW,mBAAS,IAA3C,mBAAOd,EAAP,KAAkBI,EAAlB,KACA,EAAgCU,mBAAS,IAAzC,mBAAOb,EAAP,KAAiBI,EAAjB,KAPa,4CASb,4BAAAU,EAAA,sEAC0BC,IAAMC,IAAN,4DAA+D7B,EAA/D,kBAA6EyB,IADvG,OACSK,EADT,OAEGhB,EAAQ,gBAAD,OAAiBiB,KAAKC,MAAOF,EAASG,KAAKC,KAAKxB,KAAM,KAAKyB,QAAQ,GAAnE,WACPpB,EAAc,eAAD,OAAgBe,EAASG,KAAKG,QAAQ,GAAGF,OACtDlB,EAAa,SAAD,OAAUqB,OAAOP,EAASG,KAAKK,KAAKC,OAAOJ,QAAQ,GAAnD,SACZlB,EAAY,aAAD,OAAcoB,OAAOP,EAASG,KAAKC,KAAKrB,UAAUsB,QAAQ,GAA1D,OALd,4CATa,sBAmBb,OAnBa,mCAiBbK,GAGG,qBAAKtC,UAAU,aAAf,SACG,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,mBAAd,qCACG,cAAC,EAAD,CACGF,KAAMA,EACNC,QAASA,IAEZ,cAAC,EAAD,CACGD,KAAMA,EACNU,KAAMA,EACNC,WAAYA,EACZC,UAAWA,EACXC,SAAUA,EACVC,QAASA,EACTC,cAAeA,EACfC,aAAcA,EACdC,YAAaA,UCvC/BwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c5bcd22.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction WeatherInput({city, setCity}) {\r\n\r\n   const handleChange = (e) => {\r\n      setCity(e.target.value)\r\n   }\r\n\r\n   return (\r\n\t   <>\r\n\t\t\t<label>\r\n\t         <input \r\n\t\t\t\t   className='weatherapp-input' \r\n\t\t\t\t   type=\"text\" \r\n\t            placeholder='Enter your city...' \r\n\t            onChange={handleChange} \r\n\t            value={city} \r\n\t         />\t\r\n\t\t\t</label>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default WeatherInput;\r\n","import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nfunction WeatherInfo ({city, temp, conditions, windSpeed, humidity, setTemp, setConditions, setWindSpeed, setHumidity}) {\r\n\t   \r\n\tuseEffect(() => {\r\n\t\tif(city === '') {\r\n\t\t\tsetTemp('')\r\n\t\t\tsetConditions('')\r\n\t\t\tsetWindSpeed('')\r\n\t\t\tsetHumidity('')\r\n      }\r\n\t})\r\n\r\n   return (\r\n\t\t<>\r\n\t\t\t<CSSTransition\r\n\t\t\t   in={temp, conditions, humidity, windSpeed}\r\n\t\t\t   timeout={1000}\r\n\t\t\t   classNames=\"weatherapp-info-transition\"\r\n\t\t\t   unmountOnExit\r\n\t\t\t>\r\n\t\t\t   <div className='weatherapp-info'>\r\n\t\t\t      <p>{temp}</p>\r\n\t\t\t      <p>{conditions}</p>\r\n\t\t\t      <p>{humidity}</p>\r\n\t\t\t      <p>{windSpeed}</p>\r\n\t\t\t   </div>\r\n\t\t\t</CSSTransition>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default WeatherInfo;\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport WeatherInput from './components/WeatherInput.js';\nimport WeatherInfo from './components/WeatherInfo.js';\n\n\nfunction App () {\n\n   const apiKey = 'f52437d5017d5a78646240c61e82cad0';\n   const [city, setCity] = useState('');\n   const [temp, setTemp] = useState('');\n   const [conditions, setConditions] = useState('');\n   const [windSpeed, setWindSpeed] = useState('');\n   const [humidity, setHumidity] = useState('');\n  \n   async function getWeather () {\n      const responce = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`);\n      setTemp(`Temperature: ${Math.round((responce.data.main.temp)-273).toFixed(0)} Â°C`);\n      setConditions(`Conditions: ${responce.data.weather[0].main}`);\n      setWindSpeed(`Wind: ${Number(responce.data.wind.speed).toFixed(0)} m/s`);\n      setHumidity(`Humidity: ${Number(responce.data.main.humidity).toFixed(0)} %`)\n   }\n      \n   getWeather();\n   \n   return (\n      <div className=\"weatherapp\">\n         <div className='container'>\n            <h1 className='weatherapp-title'>Welcome to weather app!</h1>\n               <WeatherInput \n                  city={city}\n                  setCity={setCity}\n               />\n               <WeatherInfo \n                  city={city}\n                  temp={temp}\n                  conditions={conditions}\n                  windSpeed={windSpeed}\n                  humidity={humidity}\n                  setTemp={setTemp}\n                  setConditions={setConditions}\n                  setWindSpeed={setWindSpeed}\n                  setHumidity={setHumidity}\n               />\n         </div>\n      </div>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}